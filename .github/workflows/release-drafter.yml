name: ReleaseDrafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: drafter
        id: drafter
        uses: release-drafter/release-drafter@v5
   
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
          publish: true
#          commitish: main



#      - name: saveOutput
#        run: |
#          mkdir -p output/release
#          echo "${{ steps.drafter.outputs.id }}"
#          echo "RELEASE_ID=${{ steps.drafter.outputs.id }}" >> $GITHUB_ENV
#          echo "repository variable : ${{ vars.RELEASE_ID }}"
#          echo "environment default variable : ${{ vars.RELEASE_ID }}"
#          echo "${{ steps.drafter.outputs.body }}" > output/release/ReleaseNotes.txt
#
#        env:
#          RELEASE_ID: ${{ steps.drafter.outputs.id }}
#          RELEASE_NAME: ${{ steps.drafter.outputs.name }}
#          RELEASE_TAG_NAME: ${{ steps.drafter.outputs.tag_name }}
#          RELEASE_BODY: ${{ steps.drafter.outputs.body }}
#          RELEASE_HTML_URL: ${{ steps.drafter.outputs.html_url }}
#          RELEASE_UPLOAD_URL: ${{ steps.drafter.outputs.upload_url }}
#
#      - name: upload outputs
#        uses: actions/upload-artifact@v3
#        with:
#          name: release-notes
#          path: output/release/ReleaseNotes.txt

          # echo "${{ steps.drafter.outputs.name }}"
          # echo "${{ steps.drafter.outputs.tag_name }}"
          # echo "${{ steps.drafter.outputs.body }}"

